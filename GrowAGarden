local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StatsService = game:GetService("Stats")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

pcall(function()
    for _, v in pairs(CoreGui:GetChildren()) do
        if v:IsA("ScreenGui") and v.Name == "CrystalHubUI" then
            v:Destroy()
        end
    end
end)

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CrystalHubUI"
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = CoreGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(1, 0, 1, 0)
Frame.Position = UDim2.new(0, 0, 0, 0)
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0.3
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0.15, 0)
Title.Position = UDim2.new(0, 0, 0.35, 0)
Title.BackgroundTransparency = 1
Title.Text = "Crystal Hub"
Title.TextColor3 = Color3.fromRGB(225, 222, 255)
Title.TextScaled = true
Title.Font = Enum.Font.FredokaOne
Title.TextXAlignment = Enum.TextXAlignment.Center
Title.TextYAlignment = Enum.TextYAlignment.Center
Title.Parent = Frame

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, 0, 0.08, 0)
StatusLabel.Position = UDim2.new(0, 0, 0.55, 0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "Status: https://discord.gg/9HMr3sCZnZ"
StatusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
StatusLabel.TextScaled = true
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
StatusLabel.TextYAlignment = Enum.TextYAlignment.Center
StatusLabel.Parent = Frame

local StatsLabel = Instance.new("TextLabel")
StatsLabel.Size = UDim2.new(1, 0, 0.06, 0)
StatsLabel.Position = UDim2.new(0, 0, 0.65, 0)
StatsLabel.BackgroundTransparency = 1
StatsLabel.Text = "FPS: 0 | Players: 0 | Ping: 0ms"
StatsLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
StatsLabel.TextScaled = true
StatsLabel.Font = Enum.Font.GothamBold
StatsLabel.TextXAlignment = Enum.TextXAlignment.Center
StatsLabel.TextYAlignment = Enum.TextYAlignment.Center
StatsLabel.Parent = Frame

local lastTime = tick()
RunService.RenderStepped:Connect(function()
    local now = tick()
    local dt = now - lastTime
    lastTime = now
    local fps = math.floor(1 / dt)
    local ping = math.floor(StatsService.Network.ServerStatsItem["Data Ping"]:GetValue())
    local count = #Players:GetPlayers()
    StatsLabel.Text = string.format("FPS: %d | Players: %d | Ping: %dms", fps, count, ping)
end)


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function UpdateStatus(text)
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Auto Cyborg",
            Text = text,
            Duration = 3
        })
    end)
end

task.spawn(function()
    task.wait(2)
    local team = getgenv().AutoCyborg["Team"]
    if team == "Marines" or team == "Pirates" then
        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", team)
        end)
    end
end)

task.wait(5)

local function sendWebhook(statusText)
    local cfg = getgenv().AutoCyborg["Webhook"]
    if not cfg or not cfg["Enable"] or cfg["Url"] == "" then return end
    local content = ""
    if cfg["PingEveryoneWhenDone"] and statusText:find("Done all") then
        content = "@everyone"
    end
    local data = {
        ["username"] = "Crystal Hub",
        ["embeds"] = {{
            ["title"] = "Crystal Hub Auto Cyborg",
            ["color"] = 65280,
            ["fields"] = {
                {["name"] = "User", ["value"] = LocalPlayer.Name, ["inline"] = false},
                {["name"] = "Status", ["value"] = statusText, ["inline"] = false}
            }
        }},
        ["content"] = content
    }
    pcall(function()
        request({
            Url = cfg["Url"],
            Body = HttpService:JSONEncode(data),
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"}
        })
    end)
end

local function getChar() return LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() end
local function getHRP() return getChar():WaitForChild("HumanoidRootPart") end

RunService.Stepped:Connect(function()
    local char = getChar()
    if char then
        for _, v in ipairs(char:GetChildren()) do
            if v:IsA("BasePart") then v.CanCollide = false end
        end
    end
end)

local aura
local function enableAura()
    local hrp = getHRP()
    if aura and aura.Parent then aura:Destroy() end
    aura = Instance.new("Part")
    aura.Shape = Enum.PartType.Ball
    aura.Size = Vector3.new(6,6,6)
    aura.Color = Color3.fromRGB(0,255,0)
    aura.Material = Enum.Material.Neon
    aura.Transparency = 0.35
    aura.CanCollide = false
    aura.Massless = true
    aura.Parent = hrp
    local weld = Instance.new("WeldConstraint", aura)
    weld.Part0, weld.Part1 = aura, hrp
end
local function disableAura()
    if aura and aura.Parent then aura:Destroy() end
    aura = nil
end

local ChestCooldown = {}
local function keyFromVector3(v)
    local function r(x) return math.floor(x*10+0.5)/10 end
    return string.format("%.1f,%.1f,%.1f", r(v.X), r(v.Y), r(v.Z))
end
local function onCooldown(v3)
    local k = keyFromVector3(v3)
    local t = ChestCooldown[k]
    return t and (t > os.clock())
end
local function setCooldown(v3, secs)
    ChestCooldown[keyFromVector3(v3)] = os.clock() + secs
end
local function getChests()
    local list = {}
    for _, inst in ipairs(workspace:GetDescendants()) do
        if inst:IsA("BasePart")
        and inst.Parent
        and string.lower(inst.Name):find("chest")
        and not onCooldown(inst.Position) then
            table.insert(list, inst)
        end
    end
    table.sort(list,function(a,b)
        return (a.Position-getHRP().Position).Magnitude < (b.Position-getHRP().Position).Magnitude
    end)
    return list
end

local function tweenTo(targetPos)
    local hrp = getHRP()
    if not hrp then return end
    local dist = (hrp.Position - targetPos).Magnitude
    local duration = math.max(dist / getgenv().AutoCyborg["TweenSpeed"], 0.25)
    local tween = TweenService:Create(
        hrp,
        TweenInfo.new(duration, Enum.EasingStyle.Sine, Enum.EasingDirection.Out),
        {CFrame = CFrame.new(targetPos)}
    )
    tween:Play()

    local done=false
    tween.Completed:Connect(function() done=true end)

    local conn
    conn = RunService.RenderStepped:Connect(function()
        if not hrp or not hrp.Parent then
            conn:Disconnect()
            done = true
            return
        end
        hrp.Velocity = Vector3.new(0,0,0)
    end)

    repeat task.wait() until done
    conn:Disconnect()
end

local function moveToChest(chest)
    if not chest or not chest.Parent then return end
    local hrp = getHRP()
    local targetY = chest.Position.Y + 6
    tweenTo(Vector3.new(hrp.Position.X, targetY + 12, hrp.Position.Z))
    task.wait(0.05)
    if chest and chest.Parent then
        tweenTo(Vector3.new(chest.Position.X, targetY, chest.Position.Z))
    end
end

local function touchChest(part)
    if not part or not part.Parent then return end
    local hrp = getHRP()
    pcall(function()
        firetouchinterest(hrp, part, 0)
        task.wait(0.05)
        firetouchinterest(hrp, part, 1)
    end)
end

local function hasKey()
    return LocalPlayer.Backpack:FindFirstChild("Fist of Darkness") or LocalPlayer.Character:FindFirstChild("Fist of Darkness")
end

local function getMessageType()
    local gui = LocalPlayer:WaitForChild("PlayerGui")
    for _, scr in pairs(gui:GetDescendants()) do
        if (scr:IsA("TextLabel") or scr:IsA("TextButton")) and scr.Text then
            if scr.Text:find("Không tìm thấy con Chip") or scr.Text:find("Microchip not found") then
                return "NoChip"
            elseif scr.Text:find("Core Brain") or scr.Text:find("Lõi Rô%-bốt") then
                return "NeedCoreBrain"
            end
        end
    end
    return nil
end

local function startLawRaid()
    UpdateStatus("Need Core Brain - Starting Law Raid")
    sendWebhook("Need Core Brain - Starting Law Raid")

    if not (LocalPlayer.Backpack:FindFirstChild("Core Brain") or LocalPlayer.Character:FindFirstChild("Core Brain")) then
        ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward","Microchip","2")
    end

    local btn = workspace.Map.CircleIsland.RaidSummon.Button.Main.ClickDetector
    for i=1,4 do fireclickdetector(btn) task.wait(0.2) end

    task.spawn(function()
        while task.wait(0.5) do
            local boss
            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("Model") and v.Name == "Order" and v:FindFirstChild("HumanoidRootPart") then
                    boss = v break
                end
            end
            if boss and boss:FindFirstChild("HumanoidRootPart") then
                local hum = getChar():FindFirstChild("Humanoid")
                if hum and hum.Health > 0 then
                    local myHP = hum.Health
                    local bossPos = boss.HumanoidRootPart.Position
                    if myHP <= 2000 then
                        tweenTo(bossPos + Vector3.new(0, 40, 0))
                    elseif myHP > 8000 then
                        tweenTo(bossPos + Vector3.new(0, 15, 0))
                    else
                        tweenTo(bossPos + Vector3.new(0, 25, 0))
                    end
                else break end
            end
        end
    end)

    task.spawn(function()
        local btn = workspace.Map.CircleIsland.RaidSummon.Button.Main.ClickDetector
        while task.wait(2) do
            if LocalPlayer.Backpack:FindFirstChild("Core Brain") or LocalPlayer.Character:FindFirstChild("Core Brain") then
                for i=1,4 do fireclickdetector(btn) task.wait(0.2) end
                UpdateStatus("Got Core Brain, done all")
                sendWebhook("Got Core Brain, done all")
                break
            end
        end
    end)
end

local btn = workspace.Map.CircleIsland.RaidSummon.Button.Main.ClickDetector

task.wait(3)

game.ReplicatedStorage.Remotes.CommF_:InvokeServer("CyborgTrainer", "Buy")

task.spawn(function()
    while getgenv().AutoCyborg["Enable"] do
        local success, CyborgCheck = pcall(function()
            return ReplicatedStorage.Remotes.CommF_:InvokeServer("CyborgTrainer", "Check")
        end)
        if success and CyborgCheck == 2 then
            UpdateStatus("Already Cyborg - Done all!")
            sendWebhook("Already Cyborg - Done all!")
            break
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
            for _, tool in ipairs(LocalPlayer.Backpack:GetChildren()) do
                if tool.ToolTip == "Melee" then
                    tool.Parent = LocalPlayer.Character
                    break
                end
            end
        end)

        if not hasKey() then
            pcall(function()
                fireclickdetector(btn)
                task.wait(0.1)
                fireclickdetector(btn)
            end)
            task.wait(0.3)

            local msgType = getMessageType()
            if msgType == "NoChip" then
                local chests = getChests()
                if #chests > 0 then
                    UpdateStatus("📦 Collecting chests ("..#chests..")")
                    sendWebhook("📦 Collecting chests ("..#chests..")")
                end
                for _, chest in ipairs(chests) do
                    if chest and chest.Parent then
                        enableAura()
                        moveToChest(chest)
                        if chest and chest.Parent then
                            touchChest(chest)
                            setCooldown(chest.Position,60)
                        end
                        disableAura()
                        task.wait(0.05)
                    end
                end
            elseif msgType == "NeedCoreBrain" then
                startLawRaid()
            end
        else
            local keyTool = LocalPlayer.Backpack:FindFirstChild("Fist of Darkness")
            if keyTool and not LocalPlayer.Character:FindFirstChild("Fist of Darkness") then
                keyTool.Parent = LocalPlayer.Character
                task.wait(0.1)
            end
            for i=1,4 do fireclickdetector(btn) task.wait(0.2) end
            UpdateStatus("Got Key Start law raid")
            sendWebhook("Got Key Start law raid")
            break
        end

        task.wait(1)
    end
end)

do
	ply = game["Players"]
	plr = ply["LocalPlayer"]
	Root = plr["Character"]["HumanoidRootPart"]
	replicated = game:GetService("ReplicatedStorage")
	Lv = game["Players"]["LocalPlayer"]["Data"]["Level"]["Value"]
	TeleportService = game:GetService("TeleportService")
	TW = game:GetService("TweenService")
	Lighting = game:GetService("Lighting")
	Enemies = workspace["Enemies"]
	vim1 = game:GetService("VirtualInputManager")
	vim2 = game:GetService("VirtualUser")
	TeamSelf = plr["Team"]
	RunSer = game:GetService("RunService")
	Stats = game:GetService("Stats")
	Energy = plr["Character"]["Energy"]["Value"]
	Boss = {}
	BringConnections = {}
	MaterialList = {}
	NPCList = {}
	shouldTween = false
	SoulGuitar = false
	KenTest = true
	debug = false
	Brazier1 = false
	Brazier2 = false
	Brazier3 = false
	Sec = .1
	ClickState = 0
	Num_self = 25
end
local Ec = game["Players"]["LocalPlayer"]
local CombatUtil = require(game.ReplicatedStorage.Modules.CombatUtil)
hookfunction(CombatUtil.GetComboPaddingTime, function(...)
	return 0 
end)
hookfunction(CombatUtil.GetAttackCancelMultiplier, function(...)
	return 0 
end)
hookfunction(CombatUtil.CanAttack, function(...)
	return true 
end)
local function Bc(x)
	if not x then
		return false
	end
	local L = x:FindFirstChild("Humanoid")
	return L and L["Health"] > 0
end
local function Pc(x, L)
	local a = (game:GetService("Workspace"))["Enemies"]:GetChildren()
	local V = (game:GetService("Players")):GetPlayers()
	local H = {}
	local r = (x:GetPivot())["Position"]
	for x, a in ipairs(a) do
		local V = a:FindFirstChild("HumanoidRootPart")
		if V and Bc(a) then
			local x = (V["Position"] - r)["Magnitude"]
			if x <= L then
				table["insert"](H, a)
			end
		end
	end
	for x, a in ipairs(V) do
		if a ~= Ec and a["Character"] then
			local x = a["Character"]:FindFirstChild("HumanoidRootPart")
			if x and Bc(a["Character"]) then
				local V = (x["Position"] - r)["Magnitude"]
				if V <= L then
					table["insert"](H, a["Character"])
				end
			end
		end
	end
	return H
end
function AttackNoCoolDown()
	local x = (game:GetService("Players"))["LocalPlayer"]
	local L = x["Character"]
	if not L then
		return
	end
	local a = nil
	for x, L in ipairs(L:GetChildren()) do
		if L:IsA("Tool") then
			a = L
			break
		end
	end
	if not a then
		return
	end
	local V = Pc(L, 100)
	if #V == 0 then
		return
	end
	local H = game:GetService("ReplicatedStorage")
	local r = H:FindFirstChild("Modules")
	if not r then
		return
	end
	local R = ((H:WaitForChild("Modules")):WaitForChild("Net")):WaitForChild("RE/RegisterAttack")
	local y = ((H:WaitForChild("Modules")):WaitForChild("Net")):WaitForChild("RE/RegisterHit")
	if not R or not y then
		return
	end
	local l, M = {}, nil
	for x, L in ipairs(V) do
		if not L:GetAttribute("IsBoat") then
			local x = {
				"RightLowerArm",
				"RightUpperArm",
				"LeftLowerArm";
				"LeftUpperArm",
				"RightHand",
				"LeftHand"
			}
			local a = L:FindFirstChild(x[math["random"](#x)]) or L["PrimaryPart"]
			if a then
				table["insert"](l, {
					L,
					a
				})
				M = a
			end
		end
	end
	if not M then
		return
	end
	R:FireServer(0)
	local n = x:FindFirstChild("PlayerScripts")
	if not n then
		return
	end
	local b = n:FindFirstChildOfClass("LocalScript")
	while not b do
		n["ChildAdded"]:Wait()
		b = n:FindFirstChildOfClass("LocalScript")
	end
	local Z
	if getsenv then
		local x, L = pcall(getsenv, b)
		if x and L then
			Z = L["_G"]["SendHitsToServer"]
		end
	end
	local q, I = pcall(function()
		return (require(r["Flags"]))["COMBAT_REMOTE_THREAD"] or false
	end)
	if q and (I and Z) then
		Z(M, l)
	elseif q and not I then
		y:FireServer(M, l)
	end
end
CameraShakerR = require(game["ReplicatedStorage"]["Util"]["CameraShaker"])
CameraShakerR:Stop()
get_Monster = function()
	for x, L in pairs(workspace["Enemies"]:GetChildren()) do
		local a = L:FindFirstChild("UpperTorso") or L:FindFirstChild("Head")
		if L:FindFirstChild("HumanoidRootPart", true) and a then
			if (L["Head"]["Position"] - plr["Character"]["HumanoidRootPart"]["Position"])["Magnitude"] <= 50 then
				return true, a["Position"]
			end
		end
	end
	for x, L in pairs(workspace["SeaBeasts"]:GetChildren()) do
		if L:FindFirstChild("HumanoidRootPart") and (L:FindFirstChild("Health") and L["Health"]["Value"] > 0) then
			return true, L["HumanoidRootPart"]["Position"]
		end
	end
	for x, L in pairs(workspace["Enemies"]:GetChildren()) do
		if L:FindFirstChild("Health") and (L["Health"]["Value"] > 0 and L:FindFirstChild("VehicleSeat")) then
			return true, L["Engine"]["Position"]
		end
	end
end
Actived = function()
	local x = game["Players"]["LocalPlayer"]["Character"]:FindFirstChildOfClass("Tool")
	for x, L in next, getconnections(x["Activated"]) do
		if typeof(L["Function"]) == "function" then
			getupvalues(L["Function"])
		end
	end
end
task["spawn"](function()
	RunSer["Heartbeat"]:Connect(function()
		pcall(function()
			if not _G["Seriality"] then
				return
			end
			AttackNoCoolDown()
			local x = game["Players"]["LocalPlayer"]["Character"]:FindFirstChildOfClass("Tool")
			local L = x["ToolTip"]
			local a, V = get_Monster()
			if L == "Blox Fruit" then
				if a then
					local L = x:FindFirstChild("LeftClickRemote")
					if L then
						Actived()
						L:FireServer(Vector3["new"](.01, -500, .01), 1, true)
						L:FireServer(false)
					end
				end
			end
		end)
	end)
end)

_G["Seriality"] = true
local FastAttack = {}
local folders = {
    workspace.Enemies,
    workspace.Characters
}
local Modules = game.ReplicatedStorage:WaitForChild("Modules")
local RE_Attack = Modules.Net:WaitForChild("RE/RegisterAttack")
local RunHitDetection
local HIT_FUNCTION
task.defer(function()
    local success, Env = pcall(getsenv, game:GetService("ReplicatedStorage").Modules.CombatUtil)
    if success and Env then
        print("OK")
        HIT_FUNCTION = Env._G.SendHitsToServer
    end
    local success2, module = pcall(require, Modules:WaitForChild("CombatUtil"))
    if success2 and module then
        RunHitDetection = module.RunHitDetection
    end
end)
function FastAttack:IsAlive(v)
    return v and not v:FindFirstChild("VehicleSeat") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 and v:FindFirstChild("HumanoidRootPart")
end
function FastAttack:GetDistance(x,xx)
    return ((typeof(x) == "Vector3" and CFrame.new(x) or x).Position - (xx == nil and game.Players.LocalPlayer.Character.PrimaryPart or (typeof(xx) == "Vector3" and Vector3.new(xx) or xx)).Position).Magnitude
end
function FastAttack:GetHits()
    local Hits = {}
    for i,v in next, workspace.Enemies:GetChildren() do
        if self:IsAlive(v) and self:GetDistance(v.HumanoidRootPart.Position) <= 60 then
            table.insert(Hits, v)
        end
    end
    return Hits
end
function FastAttack:GetRandomHitbox(v)
    local HitBox =  {
        "RightLowerArm", 
        "RightUpperArm", 
        "LeftLowerArm", 
        "LeftUpperArm", 
        "RightHand", 
        "LeftHand",
        "HumanoidRootPart",
        "Head"
    }
    return v:FindFirstChild(HitBox[math.random(1, #HitBox)]) or v.HumanoidRootPart
end
function FastAttack:SuperFastAttack()
    local BladeHits = self:GetHits()
    local realenemy
    if #BladeHits == 0 then return end
    local Args = {[1] = nil, [2] = {}}
    for _,v in next, BladeHits do
        if not Args[1] then
            Args[1] = self:GetRandomHitbox(v)
        end
        Args[2][#Args[2] + 1] = {
            [1] = v,
            [2] = self:GetRandomHitbox(v)
        }
        realenemy = v
    end
    if not Args[2] then Args[2] = {realenemy} end
    Args[2][#Args[2] + 1] = realenemy
    RE_Attack:FireServer(0)
    if HIT_FUNCTION then
        HIT_FUNCTION(unpack(Args))
    end
end
function FastAttack:RunHitboxFastAttack()
    local Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
    if not Tool then return end
    local success, hitResult, overlapParams, group1, group2 = pcall(function()
        return RunHitDetection(game.Players.LocalPlayer.Character, Tool)
    end)
    
    if not success or not hitResult or type(hitResult) ~= "table" then return end
    if #hitResult == 0 then return end

    local Args = {[1] = nil, [2] = {}}
    for _, target in ipairs(hitResult) do
        if self:IsAlive(target) then
            local hitPart = self:GetRandomHitbox(target)
            if not Args[1] then Args[1] = hitPart end
            table.insert(Args[2], {target, hitPart})
        end
    end

    if #Args[2] > 0 then
        RE_Attack:FireServer(0)
        if HIT_FUNCTION then
            HIT_FUNCTION(unpack(Args))
        end
    end
end

while task.wait(0.005) do
    pcall(function()
        FastAttack:SuperFastAttack()
		FastAttack:RunHitboxFastAttack()
    end)
end
